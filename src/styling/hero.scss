@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&family=Quattrocento+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap');

:root {
  --primary: #ff6a3e;
  --primaryLight: #ffba43;
  --secondary: #ffba43;
  --secondaryLight: #ffba43;
  --headerColor: #1a1a1a;
  --bodyTextColor: #4e4b66;
  --bodyTextColorWhite: #fafbfc;
  /* 13px - 16px */
  --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
  /* 31px - 49px */
  --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
  --bodyFontSize: 1rem;
  /* 60px - 100px top and bottom */
  --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  --viaPurple:#602b88;
  --viaLightPurple: #ae8dce;
  --viaBase: #f3edf6;
  --viaSlate: #837ba1;
  --viaRed: #a2226e;
  --viaGreen: #14733c;
  --viaBlue: #8cb8c2;
  --viaPink: #d65e97;
}


/*-- -------------------------- -->
<---         Gallery            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #gallery-1716 {
      padding: var(--sectionPadding);
      position: relative;
      z-index: 1;
      overflow: hidden;
      
      .cs-container {
          width: 100%;
          max-width: calc(1280 / 16 * 1rem);
          margin: auto;
          display: flex;
          flex-direction: column;
          align-items: center;
          /* 48px - 64px */
          gap: clamp(3rem, 6vw, 4rem);
      }

      .cs-content {
          /* set text align to left if content needs to be left aligned */
          text-align: left;
          width: 100%;
          display: flex;
          flex-direction: column;
          /* centers content horizontally, set to flex-start to left align */
          align-items: flex-start;
          color: var(--viaBase) ;
      }
      .cs-title {
        font-size: var(--headerFontSize);
        font-weight: 900;
        line-height: 1.2em;
        text-align: inherit;
        max-width: 43.75rem;
        margin: 0 0 1rem 0;
        color: var(--bodyTextColor);
        position: relative;
    }

      .cs-text {
          margin-bottom: calc(16 / 16 * 1rem);
          &:last-of-type {
              /* 32px - 64px */
              margin-bottom: clamp(2rem, 7vw, 4rem);

              &:before {
                  /* colored overlay rectangle - positioned absolute to the section tag because it is the nearest parent with a decalred position relative */
                  content: '';
                  width: 100%;
                  height: 80%;
                  background: var(--viaLightPurple);
                  opacity: .1;
                  position: absolute;
                  display: block;
                  bottom: 0;
                  left: 0;
                  z-index: -1;
              }
          }
      }

      .cs-button-solid {
          font-size: calc(16 / 16 * 1rem);
          /* 46px - 56px */
          line-height: clamp(2.875rem, 5.5vw, 3.5rem);
          text-decoration: none;
      font-weight: 700;
        text-align: center;
          margin: 0;
          color: #fff;
          min-width: calc(150 / 16 * 1rem);
          padding: 0 calc(24 / 16 * 1rem);
          background-color: var(--viaPink);
          border-radius: 2.5rem;
          display: inline-block;
          position: relative;
          z-index: 1;
          /* prevents padding from adding to the width */
          box-sizing: border-box;
          box-shadow: inset -25px 0px 12px -17px rgba(0,0,0,0.3);

          &:before {
              content: '';
              position: absolute;
              height: 100%;
              width: 0%;
              background: var(--viaLightPurple);
              border-radius: 2.5rem;
              opacity: 1;
              top: 0;
              left: 0;
              z-index: -1;
              transition: width .3s;
             
          }

          &:hover {
             border: 1px solid var(--viaBase);
              &:before {
                  width: 100%;
                  background-color: var(--viaLightPurple);
                  border: 1px solid var(--viaBase);
              }
          }
      }

      .cs-gallery {
          width: 100%;
          display: grid;
          grid-template-columns: repeat(12, 1fr);
          /* sends it to the top in the 1st position */
          order: -1;
          margin-top: 10px;
          box-shadow: 26px 20px 12px -8px rgba(0,0,0,0.3);
          border-radius: 2rem;
          
      }

      .cs-picture {
          width: 100%;
          /* changes at tablet */
          height: 100vw;
          max-height: calc(400 / 16 * 1rem);
          display: block;
          position: relative;
          z-index: 1;
          grid-column: span 4;
          border-radius: 2rem;

          

          img {
              width: 100%;
              height: 100%;
              object-fit: cover;
              position: absolute;
              top: 0;
              left: 0;
              border-top-left-radius: 2rem;
              border-bottom-left-radius: 2rem;

              
          }
      }
  }
}
#gallery-1716 .cs-picture:nth-child(2) img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    border-top-left-radius: 0px;
    border-top-right-radius: 0rem;
    border-bottom-left-radius: 0rem;
}
#gallery-1716 .cs-picture:nth-child(3) img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    border-top-left-radius: 0px;
    border-top-right-radius: 2rem;
    border-bottom-left-radius: 0rem;
    border-bottom-right-radius: 2rem;
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #gallery-1716 {
      .cs-container {
          flex-direction: row;
          justify-content: space-between;
          align-items: stretch;
      }

      .cs-content {
          max-width: calc(304 / 16 * 1rem);
          /* 32px - 64px, ensures theres always a gap at the bottom to space out the content from the bottom of the container and let the colored rectangle shape be a little bigger and take up more space */
          padding-bottom: clamp(2rem, 7vw, 4rem);
          color: var(--viaBase);
      }

      .cs-text {
          &:last-of-type {
              /* add position relative so the colored rectangle is now absolutely positioned to the cs-text parent. We also only want these styles on the last paragraph tag */
              position: relative;
              z-index: 1;

              &:before {
                  width: 250vw;
                  height: 100vw;
                  top: calc(100% + 1.8rem);
                  left: 50%;
                  transform: translateX(-50%);
              }
          }
      }

      .cs-gallery {
          height: auto;
          border-radius: 2rem;
      }

      .cs-picture {
          height: 100%;
          max-height: 100%;
          /* 280px - 420px */
          min-height: clamp(17.5rem, 37vw, 26.25rem);
          border-radius: 2rem;
      }
  }
}
